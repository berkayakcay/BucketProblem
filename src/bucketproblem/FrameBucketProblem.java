package bucketproblem;
/**
 *
 * @author berkay
 */
import java.util.*;
import javax.swing.JOptionPane;

public class FrameBucketProblem extends javax.swing.JFrame {
    /**
     * Creates new form FrameBucketProblem
     */
    public FrameBucketProblem() {
        initComponents();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        TextArea_Sequence = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        Button_Animate = new javax.swing.JButton();
        Button_Calculate = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        Label_Target = new javax.swing.JLabel();
        Label_smBucket = new javax.swing.JLabel();
        Label_lgBucket = new javax.swing.JLabel();
        Text_Target = new javax.swing.JTextField();
        Text_smBucket = new javax.swing.JTextField();
        Text_lgBucket = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        canvas = new java.awt.Canvas();
        Label_Animation = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Artificial Intelligence Problem Solver");
        setResizable(false);

        TextArea_Sequence.setColumns(20);
        TextArea_Sequence.setRows(5);
        jScrollPane1.setViewportView(TextArea_Sequence);

        Button_Animate.setText("Animate");
        Button_Animate.setPreferredSize(new java.awt.Dimension(23, 23));
        Button_Animate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_AnimateActionPerformed(evt);
            }
        });

        Button_Calculate.setText("Calculate");
        Button_Calculate.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Button_Calculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_CalculateActionPerformed(evt);
            }
        });

        jTextPane1.setText("Software Engineering Department - B1405.090069 - Berkay AKÃ‡AY - Artificial Intelligence ");
        jTextPane1.setToolTipText("");
        jTextPane1.setEnabled(false);
        jScrollPane2.setViewportView(jTextPane1);

        Label_Target.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        Label_Target.setText("Taget Number : ");
        Label_Target.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        Label_smBucket.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        Label_smBucket.setText("Small Bucket    : ");
        Label_smBucket.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        Label_lgBucket.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        Label_lgBucket.setText("Larger Bucket  :");
        Label_lgBucket.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        Text_Target.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Text_Target.setMinimumSize(new java.awt.Dimension(25, 25));

        Text_smBucket.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Text_smBucket.setMinimumSize(new java.awt.Dimension(25, 25));
        Text_smBucket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Text_smBucketActionPerformed(evt);
            }
        });

        Text_lgBucket.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Text_lgBucket.setMinimumSize(new java.awt.Dimension(25, 25));
        Text_lgBucket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Text_lgBucketActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(Label_Target, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(Text_Target, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(Label_smBucket, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Text_smBucket, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(Label_lgBucket, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Text_lgBucket, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Button_Calculate, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Button_Animate, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {Text_Target, Text_lgBucket, Text_smBucket});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {Label_Target, Label_lgBucket, Label_smBucket});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {Button_Animate, Button_Calculate});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(Label_Target, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Text_Target, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Label_smBucket, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(Label_lgBucket, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Text_lgBucket, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(Button_Calculate, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Button_Animate, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Text_smBucket, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {Label_Target, Label_lgBucket, Label_smBucket});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {Text_Target, Text_lgBucket, Text_smBucket});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {Button_Animate, Button_Calculate});

        Label_Animation.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        Label_Animation.setText("Animator");
        Label_Animation.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        Label_Animation.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jSeparator1)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Label_Animation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(canvas, javax.swing.GroupLayout.PREFERRED_SIZE, 663, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 532, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Label_Animation, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(canvas, javax.swing.GroupLayout.PREFERRED_SIZE, 476, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Button_CalculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_CalculateActionPerformed

        target = Integer.parseInt(Text_Target.getText());
        bucket1 = Integer.parseInt(Text_smBucket.getText());
        bucket2 = Integer.parseInt(Text_lgBucket.getText());
        if (bucket1 > bucket2) {
            JOptionPane.showMessageDialog(null, bucket1 + "L bucket is greater then a " + bucket2 + "L bucket!", "Please input correct values", JOptionPane.ERROR_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, "You want " + target + "L of water from a " + bucket1 + "L bucket and a " + bucket2 + "L bucket?", "Problem Solver", JOptionPane.INFORMATION_MESSAGE);
            if (target > bucket1 && target > bucket2) { // target is larget than buckets
                JOptionPane.showMessageDialog(null, errCapacity, "Error", JOptionPane.ERROR_MESSAGE);
            } else {
                if (target % gcd(bucket1, bucket2) != 0) {
                    JOptionPane.showMessageDialog(null, impossible, "Impossible", JOptionPane.ERROR_MESSAGE);
                } else {
                    // Create bucket object
                    bucket lgBucket = new bucket();
                    bucket smBucket = new bucket();

                    if (bucket1 > bucket2) // bucket 1 is larger
                    {
                        lgBucket.setName("first bucket");
                        lgBucket.setSize(bucket1);
                        lgBucket.setVol(0);

                        smBucket.setName("second bucket");
                        smBucket.setSize(bucket2);
                        smBucket.setVol(0);
                    } else { // bucket 2 is larger
                        lgBucket.setName("second bucket");
                        lgBucket.setSize(bucket2);
                        lgBucket.setVol(0);

                        smBucket.setName("first bucket");
                        smBucket.setSize(bucket1);
                        smBucket.setVol(0);
                    }
                    lgBucket.dump();
                    smBucket.dump();
                    TextArea_Sequence.setText(null);
                    sequence.clear();

                    while (lgBucket.getVol() != lgBucket.getSize()) {
                        smBucket.fill();
                        sequence.add(lgBucket.getVol() + ":" + smBucket.getVol());
                        if (lgBucket.getVol() == target || smBucket.getVol() == target) {
                            break;
                        }
                        smBucket.pour(lgBucket);
                        sequence.add(lgBucket.getVol() + ":" + smBucket.getVol());
                        if (lgBucket.getVol() == target || smBucket.getVol() == target) {
                            break;
                        }
                        if (lgBucket.getVol() == lgBucket.getSize()) {
                            lgBucket.dump();
                            sequence.add(lgBucket.getVol() + ":" + smBucket.getVol());
                            smBucket.pour(lgBucket);
                            sequence.add(lgBucket.getVol() + ":" + smBucket.getVol());
                        }
                    }
                    if (smBucket.getVol() == target) {
                        lgBucket.setVol(smBucket.getVol());
                        smBucket.dump();

                        sequence.add(lgBucket.getVol() + ":" + smBucket.getVol());

                        for (int i = 0; i < sequence.size(); i++) {
                            TextArea_Sequence.setText(TextArea_Sequence.getText() + i + ". Steps of sequence is " + sequence.get(i) + "\n");
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_Button_CalculateActionPerformed

    private void Button_AnimateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_AnimateActionPerformed
        // Animate
        Animation anime = new Animation();
        anime.paint(canvas.getGraphics(), target, bucket1, bucket2, sequence);
    }//GEN-LAST:event_Button_AnimateActionPerformed

    private void Text_smBucketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Text_smBucketActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Text_smBucketActionPerformed

    private void Text_lgBucketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Text_lgBucketActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Text_lgBucketActionPerformed

    public static int gcd(int a, int b) {
        if (a < 0) {
            a = -a;
        }
        if (b < 0) {
            b = -b;
        }
        if (b > a) {
            int temp = a;
            a = b;
            b = temp;
        }
        while (true) {
            if (b == 0) {
                return a;
            }
            a %= b;
            if (a == 0) {
                return b;
            }
            b %= a;
        }
    }
    // variables
    public static ArrayList<String> sequence = new ArrayList<>();
    public static int target;
    public static int bucket1;
    public static int bucket2;

    public static String welcome = "Problem Solver. \nPlease input your liters ";
    public static String impossible = "Your target can't be reached. Either change your target or your bucket sizes!";
    public static String errCapacity = "One of your buckets has to have enough room for how much water you want!";
    public static String success = "You have " + target + "L of water!";

    public static void main(String args[]) {
        // Begin

        // End
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameBucketProblem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameBucketProblem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameBucketProblem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameBucketProblem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameBucketProblem().setVisible(true);
            }
        });
    }  
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Button_Animate;
    private javax.swing.JButton Button_Calculate;
    public static javax.swing.JLabel Label_Animation;
    private javax.swing.JLabel Label_Target;
    private javax.swing.JLabel Label_lgBucket;
    private javax.swing.JLabel Label_smBucket;
    private javax.swing.JTextArea TextArea_Sequence;
    private javax.swing.JTextField Text_Target;
    private javax.swing.JTextField Text_lgBucket;
    private javax.swing.JTextField Text_smBucket;
    private java.awt.Canvas canvas;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextPane jTextPane1;
    // End of variables declaration//GEN-END:variables
}
